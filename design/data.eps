%!PS-Adobe-2.0 EPSF-2.0
%%Title: data.eps
%%Creator: gnuplot 4.6 patchlevel 4
%%CreationDate: Tue May 19 03:48:42 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (data.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 4)
  /Author (sakamoto)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue May 19 03:48:42 2015)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
686 448 M
63 0 V
6198 0 R
-63 0 V
602 448 M
( 0) Rshow
1.000 UL
LTb
686 1185 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 0.1) Rshow
1.000 UL
LTb
686 1922 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 0.2) Rshow
1.000 UL
LTb
686 2660 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 0.3) Rshow
1.000 UL
LTb
686 3397 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 0.4) Rshow
1.000 UL
LTb
686 4134 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 0.5) Rshow
1.000 UL
LTb
686 4871 M
63 0 V
6198 0 R
-63 0 V
-6282 0 R
( 0.6) Rshow
1.000 UL
LTb
686 448 M
0 63 V
0 4360 R
0 -63 V
686 308 M
( 0) Cshow
1.000 UL
LTb
1938 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 1) Cshow
1.000 UL
LTb
3190 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 2) Cshow
1.000 UL
LTb
4443 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 3) Cshow
1.000 UL
LTb
5695 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 4) Cshow
1.000 UL
LTb
6947 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 5) Cshow
1.000 UL
LTb
1.000 UL
LTb
686 4871 N
686 448 L
6261 0 V
0 4423 V
-6261 0 V
Z stroke
LCb setrgbcolor
112 2659 M
currentpoint gsave translate -270 rotate 0 0 M
(Y-Axis) Cshow
grestore
LTb
LCb setrgbcolor
3816 98 M
(X-Axis) Cshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
LCb setrgbcolor
6296 4738 M
("data.dat") Rshow
LT0
686 4134 Pls
699 4182 Pls
711 4227 Pls
724 4271 Pls
736 4312 Pls
749 4350 Pls
761 4386 Pls
774 4420 Pls
786 4451 Pls
799 4480 Pls
811 4507 Pls
824 4531 Pls
836 4552 Pls
849 4572 Pls
861 4588 Pls
874 4603 Pls
886 4615 Pls
899 4624 Pls
911 4632 Pls
924 4636 Pls
936 4639 Pls
949 4640 Pls
961 4638 Pls
974 4634 Pls
987 4628 Pls
999 4620 Pls
1012 4609 Pls
1024 4597 Pls
1037 4583 Pls
1049 4567 Pls
1062 4549 Pls
1074 4529 Pls
1087 4508 Pls
1099 4485 Pls
1112 4460 Pls
1124 4434 Pls
1137 4407 Pls
1149 4378 Pls
1162 4347 Pls
1174 4316 Pls
1187 4283 Pls
1199 4249 Pls
1212 4214 Pls
1224 4178 Pls
1237 4141 Pls
1249 4103 Pls
1262 4064 Pls
1275 4025 Pls
1287 3985 Pls
1300 3944 Pls
1312 3902 Pls
1325 3861 Pls
1337 3818 Pls
1350 3776 Pls
1362 3732 Pls
1375 3689 Pls
1387 3646 Pls
1400 3602 Pls
1412 3558 Pls
1425 3514 Pls
1437 3470 Pls
1450 3427 Pls
1462 3383 Pls
1475 3339 Pls
1487 3296 Pls
1500 3252 Pls
1512 3209 Pls
1525 3167 Pls
1537 3124 Pls
1550 3082 Pls
1563 3040 Pls
1575 2999 Pls
1588 2958 Pls
1600 2917 Pls
1613 2877 Pls
1625 2838 Pls
1638 2799 Pls
1650 2760 Pls
1663 2722 Pls
1675 2685 Pls
1688 2648 Pls
1700 2612 Pls
1713 2576 Pls
1725 2541 Pls
1738 2507 Pls
1750 2473 Pls
1763 2440 Pls
1775 2408 Pls
1788 2376 Pls
1800 2344 Pls
1813 2314 Pls
1826 2284 Pls
1838 2254 Pls
1851 2226 Pls
1863 2198 Pls
1876 2170 Pls
1888 2143 Pls
1901 2117 Pls
1913 2091 Pls
1926 2066 Pls
1938 2042 Pls
1951 2018 Pls
1963 1995 Pls
1976 1972 Pls
1988 1950 Pls
2001 1928 Pls
2013 1907 Pls
2026 1886 Pls
2038 1866 Pls
2051 1846 Pls
2063 1827 Pls
2076 1808 Pls
2088 1790 Pls
2101 1773 Pls
2114 1755 Pls
2126 1738 Pls
2139 1722 Pls
2151 1706 Pls
2164 1690 Pls
2176 1675 Pls
2189 1660 Pls
2201 1646 Pls
2214 1632 Pls
2226 1618 Pls
2239 1605 Pls
2251 1592 Pls
2264 1579 Pls
2276 1566 Pls
2289 1554 Pls
2301 1542 Pls
2314 1531 Pls
2326 1519 Pls
2339 1508 Pls
2351 1498 Pls
2364 1487 Pls
2376 1477 Pls
2389 1467 Pls
2402 1457 Pls
2414 1447 Pls
2427 1438 Pls
2439 1429 Pls
2452 1420 Pls
2464 1411 Pls
2477 1402 Pls
2489 1394 Pls
2502 1386 Pls
2514 1377 Pls
2527 1370 Pls
2539 1362 Pls
2552 1354 Pls
2564 1347 Pls
2577 1339 Pls
2589 1332 Pls
2602 1325 Pls
2614 1318 Pls
2627 1311 Pls
2639 1305 Pls
2652 1298 Pls
2664 1292 Pls
2677 1285 Pls
2690 1279 Pls
2702 1273 Pls
2715 1267 Pls
2727 1261 Pls
2740 1255 Pls
2752 1250 Pls
2765 1244 Pls
2777 1238 Pls
2790 1233 Pls
2802 1228 Pls
2815 1222 Pls
2827 1217 Pls
2840 1212 Pls
2852 1207 Pls
2865 1202 Pls
2877 1197 Pls
2890 1192 Pls
2902 1187 Pls
2915 1183 Pls
2927 1178 Pls
2940 1173 Pls
2952 1169 Pls
2965 1164 Pls
2978 1160 Pls
2990 1156 Pls
3003 1151 Pls
3015 1147 Pls
3028 1143 Pls
3040 1139 Pls
3053 1135 Pls
3065 1131 Pls
3078 1127 Pls
3090 1123 Pls
3103 1119 Pls
3115 1115 Pls
3128 1111 Pls
3140 1107 Pls
3153 1104 Pls
3165 1100 Pls
3178 1096 Pls
3190 1093 Pls
3203 1089 Pls
3215 1086 Pls
3228 1082 Pls
3240 1079 Pls
3253 1076 Pls
3266 1072 Pls
3278 1069 Pls
3291 1066 Pls
3303 1062 Pls
3316 1059 Pls
3328 1056 Pls
3341 1053 Pls
3353 1050 Pls
3366 1047 Pls
3378 1044 Pls
3391 1041 Pls
3403 1038 Pls
3416 1035 Pls
3428 1032 Pls
3441 1029 Pls
3453 1026 Pls
3466 1023 Pls
3478 1020 Pls
3491 1018 Pls
3503 1015 Pls
3516 1012 Pls
3528 1009 Pls
3541 1007 Pls
3554 1004 Pls
3566 1001 Pls
3579 999 Pls
3591 996 Pls
3604 994 Pls
3616 991 Pls
3629 989 Pls
3641 986 Pls
3654 984 Pls
3666 981 Pls
3679 979 Pls
3691 976 Pls
3704 974 Pls
3716 972 Pls
3729 969 Pls
3741 967 Pls
3754 965 Pls
3766 962 Pls
3779 960 Pls
3791 958 Pls
3804 956 Pls
3817 953 Pls
3829 951 Pls
3842 949 Pls
3854 947 Pls
3867 945 Pls
3879 943 Pls
3892 940 Pls
3904 938 Pls
3917 936 Pls
3929 934 Pls
3942 932 Pls
3954 930 Pls
3967 928 Pls
3979 926 Pls
3992 924 Pls
4004 922 Pls
4017 920 Pls
4029 918 Pls
4042 917 Pls
4054 915 Pls
4067 913 Pls
4079 911 Pls
4092 909 Pls
4105 907 Pls
4117 905 Pls
4130 904 Pls
4142 902 Pls
4155 900 Pls
4167 898 Pls
4180 897 Pls
4192 895 Pls
4205 893 Pls
4217 891 Pls
4230 890 Pls
4242 888 Pls
4255 886 Pls
4267 885 Pls
4280 883 Pls
4292 881 Pls
4305 880 Pls
4317 878 Pls
4330 876 Pls
4342 875 Pls
4355 873 Pls
4367 872 Pls
4380 870 Pls
4393 869 Pls
4405 867 Pls
4418 865 Pls
4430 864 Pls
4443 862 Pls
4455 861 Pls
4468 859 Pls
4480 858 Pls
4493 857 Pls
4505 855 Pls
4518 854 Pls
4530 852 Pls
4543 851 Pls
4555 849 Pls
4568 848 Pls
4580 846 Pls
4593 845 Pls
4605 844 Pls
4618 842 Pls
4630 841 Pls
4643 840 Pls
4655 838 Pls
4668 837 Pls
4681 836 Pls
4693 834 Pls
4706 833 Pls
4718 832 Pls
4731 830 Pls
4743 829 Pls
4756 828 Pls
4768 826 Pls
4781 825 Pls
4793 824 Pls
4806 823 Pls
4818 821 Pls
4831 820 Pls
4843 819 Pls
4856 818 Pls
4868 817 Pls
4881 815 Pls
4893 814 Pls
4906 813 Pls
4918 812 Pls
4931 811 Pls
4943 809 Pls
4956 808 Pls
4969 807 Pls
4981 806 Pls
4994 805 Pls
5006 804 Pls
5019 803 Pls
5031 801 Pls
5044 800 Pls
5056 799 Pls
5069 798 Pls
5081 797 Pls
5094 796 Pls
5106 795 Pls
5119 794 Pls
5131 793 Pls
5144 792 Pls
5156 791 Pls
5169 789 Pls
5181 788 Pls
5194 787 Pls
5206 786 Pls
5219 785 Pls
5231 784 Pls
5244 783 Pls
5257 782 Pls
5269 781 Pls
5282 780 Pls
5294 779 Pls
5307 778 Pls
5319 777 Pls
5332 776 Pls
5344 775 Pls
5357 774 Pls
5369 773 Pls
5382 772 Pls
5394 771 Pls
5407 771 Pls
5419 770 Pls
5432 769 Pls
5444 768 Pls
5457 767 Pls
5469 766 Pls
5482 765 Pls
5494 764 Pls
5507 763 Pls
5519 762 Pls
5532 761 Pls
5545 760 Pls
5557 760 Pls
5570 759 Pls
5582 758 Pls
5595 757 Pls
5607 756 Pls
5620 755 Pls
5632 754 Pls
5645 753 Pls
5657 753 Pls
5670 752 Pls
5682 751 Pls
5695 750 Pls
5707 749 Pls
5720 748 Pls
5732 748 Pls
5745 747 Pls
5757 746 Pls
5770 745 Pls
5782 744 Pls
5795 743 Pls
5807 743 Pls
5820 742 Pls
5833 741 Pls
5845 740 Pls
5858 739 Pls
5870 739 Pls
5883 738 Pls
5895 737 Pls
5908 736 Pls
5920 736 Pls
5933 735 Pls
5945 734 Pls
5958 733 Pls
5970 732 Pls
5983 732 Pls
5995 731 Pls
6008 730 Pls
6020 730 Pls
6033 729 Pls
6045 728 Pls
6058 727 Pls
6070 727 Pls
6083 726 Pls
6096 725 Pls
6108 724 Pls
6121 724 Pls
6133 723 Pls
6146 722 Pls
6158 722 Pls
6171 721 Pls
6183 720 Pls
6196 719 Pls
6208 719 Pls
6221 718 Pls
6233 717 Pls
6246 717 Pls
6258 716 Pls
6271 715 Pls
6283 715 Pls
6296 714 Pls
6308 713 Pls
6321 713 Pls
6333 712 Pls
6346 711 Pls
6358 711 Pls
6371 710 Pls
6384 709 Pls
6396 709 Pls
6409 708 Pls
6421 707 Pls
6434 707 Pls
6446 706 Pls
6459 706 Pls
6471 705 Pls
6484 704 Pls
6496 704 Pls
6509 703 Pls
6521 702 Pls
6534 702 Pls
6546 701 Pls
6559 701 Pls
6571 700 Pls
6584 699 Pls
6596 699 Pls
6609 698 Pls
6621 698 Pls
6634 697 Pls
6646 696 Pls
6659 696 Pls
6672 695 Pls
6684 695 Pls
6697 694 Pls
6709 693 Pls
6722 693 Pls
6734 692 Pls
6747 692 Pls
6759 691 Pls
6772 691 Pls
6784 690 Pls
6797 689 Pls
6809 689 Pls
6822 688 Pls
6834 688 Pls
6847 687 Pls
6859 687 Pls
6872 686 Pls
6884 686 Pls
6897 685 Pls
6909 684 Pls
6922 684 Pls
6934 683 Pls
6947 683 Pls
6579 4738 Pls
% End plot #1
1.000 UL
LTb
686 4871 N
686 448 L
6261 0 V
0 4423 V
-6261 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
